class ScriptNode{_scene;_gameObject;_parent;_children;constructor(e){this._parent=e,e instanceof ScriptNode?(this._scene=e.scene,this._gameObject=e.gameObject,e.add(this)):e instanceof Phaser.GameObjects.GameObject?(this._scene=e.scene,this._gameObject=e):this._scene=e;const t=this.awake!==ScriptNode.prototype.awake,s=this.start!==ScriptNode.prototype.start,n=this.update!==ScriptNode.prototype.update,i=this.destroy!==ScriptNode.prototype.destroy;if(t&&this.scene.events.once("scene-awake",this.awake,this),s&&this.scene.events.once(Phaser.Scenes.Events.UPDATE,this.start,this),n&&this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),t||s||n||i){const e=()=>{this.scene.events.off("scene-awake",this.awake,this),this.scene.events.off(Phaser.Scenes.Events.UPDATE,this.start,this),this.scene.events.off(Phaser.Scenes.Events.UPDATE,this.update,this),i&&this.destroy()};this.gameObject?this.gameObject.on(Phaser.GameObjects.Events.DESTROY,e):this.scene.events.on(Phaser.Scenes.Events.SHUTDOWN,e)}}get scene(){return this._scene}get gameObject(){return this._gameObject}get parent(){return this._parent}get children(){return this._children||(this._children=[]),this._children}add(e){this.children.push(e)}executeChildren(...e){if(this._children)for(const t of this._children)t.execute(...e)}execute(...e){}awake(){}start(){}update(){}destroy(){}}